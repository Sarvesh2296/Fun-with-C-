int Solution::coverPoints(vector<int> &X, vector<int> &Y) {
    int n_x = X.size();
    int n_y = Y.size();
    std::vector<int>diff_x;
    std::vector<int>diff_y;
    
    int dist = 0;
    if(X.size()!=Y.size())
    cout<<"Error: Not same size\n";
    else 
    if(X.size() == 1)
    return dist;
    else
    {
        for(int i=0; i<n_x-1; i++)
        {
            diff_x.push_back(abs(X[i]-X[i+1]));
            diff_y.push_back(abs(Y[i]-Y[i+1]));
        }
        for(int i=0; i<n_x-1; i++)
            dist += max(diff_x[i], diff_y[i]);
    }    
    return dist;
}
